docker: true
image: transentis/buildenv

pipelines:
  branches:
    release/test:
          - step:
              name: 'Build and Test'
              deployment: Test
              script:
                  - echo $NEXT_PUBLIC_BACKEND_URL 
                  - yarn
                  - yarn build
                  - zip -r application.zip .next package.json
              artifacts:
                  - application.zip
          - step:
              name: 'Deploy to Test'
              script:
                  - pipe: atlassian/aws-elasticbeanstalk-deploy:0.5.0
                    variables:
                        AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                        AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                        AWS_DEFAULT_REGION: '$AWS_DEFAULT_REGION'
                        APPLICATION_NAME: '$AWS_APPLICATION_NAME'
                        NPM_TOKEN: '$NPM_TOKEN'
                        ENVIRONMENT_NAME: '$AWS_ENVIRONMENT_NAME'
                        S3_BUCKET: '$AWS_S3_BUCKET'
                        ZIP_FILE: application.zip
                        WAIT: 'true'
    release/prod:
          - step:
              name: 'Build and Test'
              deployment: Production
              script:
                  - echo $NEXT_PUBLIC_BACKEND_URL
                  - yarn
                  - yarn build
                  - zip -r application.zip .next package.json
              artifacts:
                  - application.zip
          - step:
              name: 'Deploy to Prod'
              script:
                  - pipe: atlassian/aws-elasticbeanstalk-deploy:0.5.0
                    variables:
                        AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                        AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                        AWS_DEFAULT_REGION: '$AWS_DEFAULT_REGION'
                        APPLICATION_NAME: '$AWS_APPLICATION_NAME'
                        NPM_TOKEN: '$NPM_TOKEN'
                        ENVIRONMENT_NAME: '$AWS_ENVIRONMENT_NAME'
                        S3_BUCKET: '$AWS_S3_BUCKET'
                        ZIP_FILE: application.zip
                        WAIT: 'true'
